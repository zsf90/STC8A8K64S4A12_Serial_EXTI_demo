C51 COMPILER V9.60.0.0   UART                                                              07/19/2021 23:31:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Src\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "public.h"
   2          #include "uart.h"
   3          #include "led.h"
   4          #include <STC8.h>
   5          #include <string.h>
   6          #include <stdio.h>
   7          
   8          
   9          #define FOSC    24000000UL      // 系统工作频率
  10          #define BAUDRATE   115200         // 串口波特率设定
  11          #define BRT     (65536 - FOSC / BAUDRATE / 4)
  12          
  13          bit busy = 0; // 忙碌标志
  14          bit rx_over = 0;
  15          uint8_t rx_cnt = 0;
  16          uint8_t rx_index = 0;
  17          char rx_buffer[16];
  18          char rx_data[16];
  19          
  20          /*
  21           * 串口1中断服务函数 
  22           * 
  23          */
  24          void UartIsr() interrupt 4
  25          {
  26   1          /* TI 为1，则为串口发送中断标志位 */
  27   1          if(TI)
  28   1          {
  29   2              TI = 0;     /* 清除发送中断标志位 */
  30   2              busy = 0;   /* 一个字节数据发送完成后，复位忙标志 */
  31   2          }
  32   1          
  33   1          /* 串口接收标志位 */
  34   1          if(RI)
  35   1          {
  36   2              /* 来到这里代表已经接收到了一个字节的数据，可以从SBUF取数据了 */
  37   2              char ch = SBUF;
  38   2              if(ch != '#')
  39   2              {
  40   3                  rx_buffer[rx_cnt++] = ch; /* 把接收到的单个字节数据存储到 rx_buffer */
  41   3              }
  42   2              else
  43   2              {
  44   3                  for(rx_index=0; rx_index<rx_cnt; rx_index++)
  45   3                  {
  46   4                      rx_data[rx_index] = rx_buffer[rx_index];
  47   4                  }
  48   3                  rx_over = 1;
  49   3                  rx_cnt = 0;
  50   3              }
  51   2              RI = 0;
  52   2          }
  53   1      }
  54          
C51 COMPILER V9.60.0.0   UART                                                              07/19/2021 23:31:05 PAGE 2   

  55          /*
  56           * 串口初始化函数
  57          */
  58          void UartInit(void)
  59          {
  60   1              SCON = 0x50;            /* 8位数据,可变波特率 0101 0000 允许串口接收数据 */
  61   1          AUXR |= 0x15;       /* 0x15=0001 0101，用定时器2作为波特率发生器 */
  62   1              T2L = BRT;          /* 定时器2 重载值低字节 */
  63   1          T2H = BRT >> 8;     /* 定时器2 重载值低字节 */
  64   1          busy = 0;           /* 标志位初始化为 0 */
  65   1          ES = 1;             /* 使能串口中断 */
  66   1          EA = 1;             /* 使能总中断 */
  67   1      }
  68          
  69          /*
  70           * 发送一个字节数据到串口
  71          */
  72          void UartSend(char dat)
  73          {
  74   1          while(busy);    /* 如果 busy 为1，则一直循环 */
  75   1          busy = 1;       /* 置位忙标志 */
  76   1          SBUF = dat;     /* 把要发送的数据送给 SBUF */
  77   1      }
  78          
  79          /*
  80           * 发送字符串到串口
  81          */
  82          void UartSendStr(char *p)
  83          {
  84   1          while(*p)
  85   1          {
  86   2              UartSend(*p++);
  87   2          }
  88   1      }
  89          
  90          void UartReceiveHandle()
  91          {
  92   1          /* 接收完成 */
  93   1          if(rx_over == 1)
  94   1          {
  95   2              if(strstr(rx_data, "LED_ON") != NULL)
  96   2              {
  97   3                  led = 0;
  98   3              }
  99   2              
 100   2              if(strstr(rx_data, "LED_OFF") != NULL)
 101   2              {
 102   3                  led = 1;
 103   3              }
 104   2              rx_over = 0; /* 清除接收完成标志位 */
 105   2          }
 106   1      }
 107          
 108          /* 重写putchar函数 */
 109          char putchar(char c)
 110          {
 111   1          UartSend(c);
 112   1          return c;
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   UART                                                              07/19/2021 23:31:05 PAGE 3   

   CODE SIZE        =    211    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
